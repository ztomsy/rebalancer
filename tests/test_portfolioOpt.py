import unittest
from payload.portfolioOpt import PortfolioOpt

pricing_data_2 = {'BTC/USDT': {'1h': [[1559034000000, 8710.74, 8743.85, 8692.54, 8711.43, 1052.468837],
                 [1559037600000, 8712.89, 8718.8, 8647.1, 8683.12, 1318.354504],
                 [1559041200000, 8683.12, 8743.0, 8668.8, 8734.36, 1081.65452]]},
                  'ETH/USDT': {'1h': [[1559034000000, 270.11, 271.0, 269.01, 270.23, 14036.69663],
                 [1559037600000, 270.23, 270.49, 267.75, 268.75, 15579.44674],
                 [1559041200000, 268.75, 271.0, 267.75, 270.31, 15008.81771]]},
                  'BNB/USDT': {'1h': [[1559034000000, 33.4477, 33.4798, 33.0909, 33.191, 135370.75],
                 [1559037600000, 33.1813, 33.4977, 33.0205, 33.2011, 156239.12],
                 [1559041200000, 33.1784, 33.4717, 33.112, 33.4503, 201280.92]]}}

pricing_data_3 = {'BTC/USDT': {'1h': [[1560974400000, 9134.32, 9160.0, 8960.0, 9148.45, 1788.776124],
                              [1560978000000, 9147.17, 9214.22, 9114.66, 9212.91, 1267.978656],
                              [1560981600000, 9211.08, 9272.12, 9209.73, 9245.0, 2435.622865],
                              [1560985200000, 9246.39, 9304.0, 9233.34, 9255.49, 1319.399724],
                              [1560988800000, 9253.76, 9281.43, 9238.73, 9244.53, 675.975422],
                              [1560992400000, 9244.94, 9262.5, 9217.92, 9239.8, 629.432219],
                              [1560996000000, 9239.9, 9324.44, 9237.37, 9313.84, 965.179008],
                              [1560999600000, 9313.84, 9350.0, 9299.22, 9331.6, 1267.307775],
                              [1561003200000, 9331.84, 9344.95, 9264.74, 9294.99, 1040.794545],
                              [1561006800000, 9294.98, 9304.99, 9275.0, 9276.03, 1393.33234],
                              [1561010400000, 9276.0, 9291.35, 9273.17, 9284.39, 656.224366],
                              [1561014000000, 9283.86, 9309.09, 9232.22, 9248.25, 993.019805],
                              [1561017600000, 9248.26, 9250.07, 9182.0, 9203.23, 1307.114021],
                              [1561021200000, 9203.23, 9239.77, 9194.47, 9208.47, 785.357106],
                              [1561024800000, 9207.06, 9233.58, 9175.2, 9232.25, 894.317654],
                              [1561028400000, 9231.93, 9269.97, 9198.28, 9250.1, 1177.994724],
                              [1561032000000, 9250.08, 9258.54, 9215.84, 9248.14, 1135.412719],
                              [1561035600000, 9248.12, 9319.87, 9242.69, 9301.11, 1774.41716],
                              [1561039200000, 9301.08, 9358.0, 9284.34, 9357.99, 1603.211811],
                              [1561042800000, 9357.82, 9370.0, 9300.0, 9338.71, 1038.38783]]},
                  'ETH/USDT': {'1h': [[1560974400000, 266.44, 267.75, 266.03, 267.7, 5802.17777],
                              [1560978000000, 267.55, 268.32, 266.27, 268.28, 5424.39131],
                              [1560981600000, 268.26, 269.22, 267.72, 268.24, 8143.67803],
                              [1560985200000, 268.24, 269.14, 267.82, 268.14, 7215.10494],
                              [1560988800000, 268.16, 268.63, 267.8, 268.09, 3279.09237],
                              [1560992400000, 268.03, 268.29, 267.38, 268.06, 2905.93889],
                              [1560996000000, 268.1, 270.6, 268.05, 270.06, 8694.34021],
                              [1560999600000, 270.14, 270.72, 269.33, 269.98, 7396.30165],
                              [1561003200000, 269.99, 270.22, 268.84, 269.27, 8612.12422],
                              [1561006800000, 269.27, 269.51, 268.65, 268.89, 6518.64207],
                              [1561010400000, 268.88, 269.13, 268.45, 268.62, 4239.76166],
                              [1561014000000, 268.73, 269.47, 267.26, 267.55, 12711.07644],
                              [1561017600000, 267.56, 267.83, 265.71, 266.32, 14207.4893],
                              [1561021200000, 266.32, 267.61, 266.02, 267.55, 5380.22132],
                              [1561024800000, 267.55, 267.77, 266.12, 266.84, 4923.47688],
                              [1561028400000, 266.84, 268.12, 266.31, 267.21, 5719.83035],
                              [1561032000000, 267.27, 267.5, 266.5, 267.46, 7235.32878],
                              [1561035600000, 267.5, 268.45, 267.27, 268.21, 6425.44865],
                              [1561039200000, 268.21, 268.8, 267.38, 268.75, 8464.8859],
                              [1561042800000, 268.76, 268.88, 267.45, 268.38, 2851.90119]]},
                  'BNB/USDT': {'1h': [[1560974400000, 35.4221, 35.5, 35.2272, 35.34, 196804.24],
                              [1560978000000, 35.34, 35.5, 35.3009, 35.4999, 228010.56],
                              [1560981600000, 35.4828, 35.4999, 35.07, 35.2244, 253995.85],
                              [1560985200000, 35.2244, 35.25, 35.1001, 35.1888, 159826.53],
                              [1560988800000, 35.1764, 35.2498, 35.1334, 35.1726, 99895.78],
                              [1560992400000, 35.1727, 35.3359, 35.1332, 35.2349, 111705.79],
                              [1560996000000, 35.2394, 35.3125, 35.1918, 35.2105, 92255.37],
                              [1560999600000, 35.2105, 35.2358, 34.6153, 34.7502, 221983.54],
                              [1561003200000, 34.7502, 34.877, 34.6502, 34.6856, 136173.97],
                              [1561006800000, 34.6941, 34.8515, 34.5022, 34.6591, 132299.47],
                              [1561010400000, 34.6591, 34.6768, 34.5265, 34.6402, 105138.55],
                              [1561014000000, 34.6222, 34.977, 34.6, 34.86, 134293.51],
                              [1561017600000, 34.8769, 34.92, 34.6204, 34.6675, 101026.96],
                              [1561021200000, 34.6597, 34.7502, 34.5287, 34.7, 84969.88],
                              [1561024800000, 34.7011, 35.95, 34.3979, 35.9344, 300451.87],
                              [1561028400000, 35.95, 36.5, 35.7288, 36.2478, 384698.0],
                              [1561032000000, 36.2478, 36.9146, 36.24, 36.5796, 446889.81],
                              [1561035600000, 36.5796, 36.7272, 36.17, 36.489, 149777.23],
                              [1561039200000, 36.4946, 36.6, 36.0156, 36.2497, 143527.81],
                              [1561042800000, 36.2499, 36.47, 36.1783, 36.3906, 77872.74]]}}

pricing_data = {'BNB/BTC': {'1h':  [[1559818800000, 0.0040599, 0.0040803, 0.0040448, 0.0040715, 118153.28],
                             [1559822400000, 0.0040715, 0.004073, 0.0040216, 0.0040239, 122524.7],
                             [1559826000000, 0.0040259, 0.0040424, 0.0040056, 0.0040206, 108059.99],
                             [1559829600000, 0.00402, 0.0040207, 0.003972, 0.0039936, 68399.02],
                             [1559833200000, 0.003991, 0.0040165, 0.0039879, 0.0040117, 10286.37]]},
                'BNB/ETH': {'1h':  [[1559818800000, 0.129004, 0.129649, 0.128541, 0.129576, 2192.35],
                             [1559822400000, 0.129576, 0.129683, 0.127687, 0.127795, 3863.44],
                             [1559826000000, 0.127917, 0.128341, 0.126857, 0.127539, 2752.44],
                             [1559829600000, 0.127539, 0.127539, 0.1253, 0.126206, 6426.06],
                             [1559833200000, 0.126204, 0.1271, 0.126204, 0.1271, 672.44]]},
                'BNB/USDT': {'1h': [[1559818800000, 31.6015, 31.929, 31.5787, 31.8971, 161252.27],
                             [1559822400000, 31.8844, 31.96, 31.0348, 31.1578, 226336.86],
                             [1559826000000, 31.1718, 31.1841, 30.61, 31.002, 142418.47],
                             [1559829600000, 31.002, 31.025, 30.1928, 30.6608, 107857.95],
                             [1559833200000, 30.6607, 30.8888, 30.5505, 30.8885, 9763.01]]},
                'XRP/BNB': {'1h':  [[1559818800000, 0.01267, 0.0127, 0.01261, 0.01262, 123062.7],
                             [1559822400000, 0.01261, 0.01276, 0.01261, 0.01276, 244539.8],
                             [1559826000000, 0.01273, 0.01283, 0.01272, 0.01278, 196468.0],
                             [1559829600000, 0.01278, 0.01295, 0.01278, 0.01288, 364455.2],
                             [1559833200000, 0.01289, 0.0129, 0.01279, 0.01279, 117197.7]]},
                'BNB/PAX': {'1h':  [[1559818800000, 31.7161, 31.9433, 31.6743, 31.9433, 400.68],
                             [1559822400000, 31.9815, 32.0173, 31.2357, 31.2357, 1438.25],
                             [1559826000000, 31.18, 31.3032, 30.7373, 31.1299, 1997.59],
                             [1559829600000, 31.062, 31.062, 30.2501, 30.5664, 1234.44],
                             [1559833200000, 30.7304, 30.9028, 30.7304, 30.9028, 97.6]]},
                'BNB/TUSD': {'1h': [[1559818800000, 31.6193, 31.8686, 31.6193, 31.8686, 546.22],
                             [1559822400000, 31.8848, 31.9961, 31.2338, 31.2338, 3064.51],
                             [1559826000000, 31.1869, 31.2718, 30.7301, 31.0797, 2152.86],
                             [1559829600000, 31.0125, 31.0125, 30.2172, 30.5946, 4628.44],
                             [1559833200000, 30.7374, 30.9289, 30.618, 30.9289, 60.75]]},
                'BNB/USDC': {'1h': [[1559818800000, 31.6282, 31.9456, 31.6279, 31.9456, 1433.61],
                             [1559822400000, 31.965, 31.9987, 31.1992, 31.2471, 1890.94],
                             [1559826000000, 31.1885, 31.2853, 30.7194, 31.0884, 2148.78],
                             [1559829600000, 31.0025, 31.0025, 30.2001, 30.7122, 3028.0],
                             [1559833200000, 30.6564, 30.9346, 30.6292, 30.9346, 320.28]]},
                'BNB/USDS': {'1h': [[1559818800000, 31.5369, 31.5369, 31.5369, 31.5369, 0.0],
                             [1559822400000, 31.5236, 31.5236, 31.413, 31.4133, 20.95],
                             [1559826000000, 31.14, 31.3199, 31.0924, 31.1282, 57.5],
                             [1559829600000, 31.1282, 31.1282, 30.3398, 30.3398, 22.28],
                             [1559833200000, 30.7882, 30.7882, 30.7882, 30.7882, 4.06]]}}
base_asset = 'BNB'
frequency = 200
target_return = None
target_risk = 0.01
weight_bounds = (0.05, 0.85)

pricing_data_4 = {'ADA/BTC': {'1h': [[1561564800000, 8.24e-06, 8.26e-06, 7.66e-06, 7.67e-06, 46506431.0],
                                    [1561568400000, 7.68e-06, 7.82e-06, 7.62e-06, 7.66e-06, 28477024.0],
                                    [1561572000000, 7.66e-06, 7.68e-06, 7.35e-06, 7.36e-06, 30304146.0],
                                    [1561575600000, 7.36e-06, 7.48e-06, 7.26e-06, 7.33e-06, 27020162.0],
                                    [1561579200000, 7.32e-06, 8.11e-06, 7.31e-06, 7.75e-06, 53913704.0],
                                    [1561582800000, 7.73e-06, 8.16e-06, 7.61e-06, 7.7e-06, 55688182.0],
                                    [1561586400000, 7.7e-06, 7.81e-06, 7.56e-06, 7.69e-06, 20272352.0],
                                    [1561590000000, 7.69e-06, 7.69e-06, 7.4e-06, 7.48e-06, 18418087.0],
                                    [1561593600000, 7.49e-06, 7.55e-06, 7.34e-06, 7.46e-06, 17039789.0],
                                    [1561597200000, 7.45e-06, 7.59e-06, 7.33e-06, 7.47e-06, 24206533.0],
                                    [1561600800000, 7.47e-06, 7.61e-06, 7.35e-06, 7.51e-06, 12253130.0],
                                    [1561604400000, 7.51e-06, 7.67e-06, 7.49e-06, 7.57e-06, 11386814.0],
                                    [1561608000000, 7.57e-06, 7.57e-06, 7.43e-06, 7.51e-06, 7849974.0],
                                    [1561611600000, 7.52e-06, 7.6e-06, 7.48e-06, 7.5e-06, 8958829.0],
                                    [1561615200000, 7.5e-06, 7.58e-06, 7.43e-06, 7.48e-06, 16010791.0],
                                    [1561618800000, 7.5e-06, 7.52e-06, 7.4e-06, 7.45e-06, 8831666.0],
                                    [1561622400000, 7.45e-06, 7.52e-06, 7.38e-06, 7.48e-06, 18505053.0],
                                    [1561626000000, 7.47e-06, 7.69e-06, 7.45e-06, 7.6e-06, 32770392.0],
                                    [1561629600000, 7.6e-06, 7.65e-06, 7.49e-06, 7.64e-06, 14371026.0],
                                    [1561633200000, 7.64e-06, 7.64e-06, 7.48e-06, 7.49e-06, 6591902.0]]},
                  'FUEL/BTC': {'1h': [[1561564800000, 6.5e-07, 6.5e-07, 5.9e-07, 5.9e-07, 15929656.0],
                                       [1561568400000, 5.9e-07, 6.2e-07, 5.9e-07, 6e-07, 8330495.0],
                                       [1561572000000, 6.1e-07, 6.1e-07, 5.8e-07, 5.9e-07, 4708962.0],
                                       [1561575600000, 5.8e-07, 6e-07, 5.7e-07, 5.7e-07, 7308204.0],
                                       [1561579200000, 5.7e-07, 6.4e-07, 5.7e-07, 6.1e-07, 11873547.0],
                                       [1561582800000, 6.2e-07, 6.4e-07, 6.1e-07, 6.3e-07, 10749082.0],
                                       [1561586400000, 6.3e-07, 6.4e-07, 6.2e-07, 6.4e-07, 4099172.0],
                                       [1561590000000, 6.4e-07, 6.4e-07, 6e-07, 6.1e-07, 5745458.0],
                                       [1561593600000, 6.1e-07, 6.7e-07, 5.8e-07, 6.5e-07, 17582055.0],
                                       [1561597200000, 6.5e-07, 6.5e-07, 6.1e-07, 6.2e-07, 5310565.0],
                                       [1561600800000, 6.2e-07, 6.4e-07, 5.9e-07, 6e-07, 45129494.0],
                                       [1561604400000, 6e-07, 6.2e-07, 6e-07, 6.1e-07, 6418359.0],
                                       [1561608000000, 6.2e-07, 6.2e-07, 6e-07, 6.1e-07, 843450.0],
                                       [1561611600000, 6.1e-07, 6.3e-07, 6e-07, 6.2e-07, 6306263.0],
                                       [1561615200000, 6.2e-07, 6.4e-07, 6.1e-07, 6.3e-07, 5583525.0],
                                       [1561618800000, 6.3e-07, 6.4e-07, 6.2e-07, 6.3e-07, 4251862.0],
                                       [1561622400000, 6.3e-07, 6.4e-07, 6.2e-07, 6.3e-07, 2096998.0],
                                       [1561626000000, 6.3e-07, 6.5e-07, 6.3e-07, 6.4e-07, 4094880.0],
                                       [1561629600000, 6.4e-07, 6.5e-07, 6.3e-07, 6.3e-07, 5451868.0],
                                       [1561633200000, 6.4e-07, 6.4e-07, 6.2e-07, 6.2e-07, 4955778.0]]},
                  'ADA/BNB': {'1h': [[1561564800000, 0.00286, 0.00289, 0.0028, 0.00288, 1509596.0],
                                      [1561568400000, 0.00287, 0.00288, 0.00281, 0.00284, 1087787.4],
                                      [1561572000000, 0.00286, 0.00286, 0.00281, 0.00283, 1799318.6],
                                      [1561575600000, 0.00283, 0.00285, 0.00278, 0.00283, 751232.6],
                                      [1561579200000, 0.00284, 0.00288, 0.00273, 0.00284, 3255167.8],
                                      [1561582800000, 0.00283, 0.00283, 0.00272, 0.00275, 1633270.9],
                                      [1561586400000, 0.00275, 0.00279, 0.00273, 0.00276, 1299780.6],
                                      [1561590000000, 0.00275, 0.00275, 0.0027, 0.00271, 712135.1],
                                      [1561593600000, 0.00272, 0.00279, 0.00271, 0.00277, 1709114.3],
                                      [1561597200000, 0.00277, 0.00279, 0.0027, 0.00272, 863334.4],
                                      [1561600800000, 0.00272, 0.00278, 0.00271, 0.00276, 673678.1],
                                      [1561604400000, 0.00275, 0.0028, 0.00275, 0.00278, 443228.0],
                                      [1561608000000, 0.00278, 0.00281, 0.00273, 0.00273, 381510.9],
                                      [1561611600000, 0.00274, 0.00275, 0.00271, 0.00271, 579598.6],
                                      [1561615200000, 0.00272, 0.00272, 0.00266, 0.0027, 770549.7],
                                      [1561618800000, 0.00271, 0.00271, 0.00266, 0.00266, 1034459.9],
                                      [1561622400000, 0.00266, 0.00266, 0.0026, 0.00262, 989001.9],
                                      [1561626000000, 0.00262, 0.00269, 0.00257, 0.00267, 1647218.3],
                                      [1561629600000, 0.00268, 0.00274, 0.00267, 0.0027, 887264.3],
                                      [1561633200000, 0.0027, 0.00272, 0.00268, 0.00268, 359304.4]]},
                  'ADA/ETH': {'1h': [[1561564800000, 0.00030638, 0.00030671, 0.00029077, 0.00029344, 2262199.0],
                                      [1561568400000, 0.00029345, 0.00029789, 0.0002924, 0.00029319, 3062153.0],
                                      [1561572000000, 0.00029319, 0.00029343, 0.00028505, 0.00028746, 1464471.0],
                                      [1561575600000, 0.00028722, 0.00029021, 0.00028505, 0.00028896, 999211.0],
                                      [1561579200000, 0.00028902, 0.000298, 0.000281, 0.00029298, 5691302.0],
                                      [1561582800000, 0.00029247, 0.00030138, 0.00029104, 0.00029326, 3057321.0],
                                      [1561586400000, 0.00029412, 0.00029502, 0.00028748, 0.00029452, 955968.0],
                                      [1561590000000, 0.00029451, 0.00029453, 0.00028576, 0.00028894, 733907.0],
                                      [1561593600000, 0.00028895, 0.00028985, 0.00028516, 0.000288, 993698.0],
                                      [1561597200000, 0.00028791, 0.00028924, 0.00028422, 0.00028589, 1005846.0],
                                      [1561600800000, 0.0002865, 0.0002896, 0.00028305, 0.00028683, 871459.0],
                                      [1561604400000, 0.00028596, 0.0002925, 0.00028596, 0.00028999, 645468.0],
                                      [1561608000000, 0.00028997, 0.00029008, 0.00028705, 0.00028867, 363364.0],
                                      [1561611600000, 0.00028926, 0.00029206, 0.00028761, 0.00028902, 277103.0],
                                      [1561615200000, 0.00028902, 0.00029235, 0.00028458, 0.00028556, 831153.0],
                                      [1561618800000, 0.00028552, 0.00028945, 0.0002848, 0.00028669, 547364.0],
                                      [1561622400000, 0.00028605, 0.00028667, 0.00028164, 0.0002845, 2128717.0],
                                      [1561626000000, 0.00028468, 0.00029407, 0.00028352, 0.00029024, 2179676.0],
                                      [1561629600000, 0.00029021, 0.00029203, 0.00028627, 0.00029121, 474047.0],
                                      [1561633200000, 0.00029117, 0.00029176, 0.00028766, 0.00028921, 264544.0]]},
                  'ADA/USDT': {'1h': [[1561564800000, 0.1062, 0.10646, 0.1031, 0.10517, 32160273.1],
                                       [1561568400000, 0.10508, 0.10515, 0.10335, 0.10369, 17857902.2],
                                       [1561572000000, 0.10374, 0.10376, 0.1021, 0.10239, 17189452.2],
                                       [1561575600000, 0.10247, 0.10286, 0.10116, 0.10215, 12913936.4],
                                       [1561579200000, 0.10215, 0.10399, 0.0951, 0.09979, 44506553.2],
                                       [1561582800000, 0.09979, 0.09981, 0.096, 0.09706, 40886026.4],
                                       [1561586400000, 0.09706, 0.0981, 0.09576, 0.09697, 15407232.8],
                                       [1561590000000, 0.09702, 0.09847, 0.09676, 0.09814, 11046879.8],
                                       [1561593600000, 0.09782, 0.09954, 0.09711, 0.09828, 10501742.9],
                                       [1561597200000, 0.09822, 0.09842, 0.09469, 0.09614, 19719476.5],
                                       [1561600800000, 0.09606, 0.097, 0.095, 0.09688, 10606172.2],
                                       [1561604400000, 0.09688, 0.09895, 0.09631, 0.09828, 7381814.2],
                                       [1561608000000, 0.09827, 0.09855, 0.09734, 0.0974, 6598490.6],
                                       [1561611600000, 0.09736, 0.09756, 0.09623, 0.09693, 5451024.4],
                                       [1561615200000, 0.09693, 0.09693, 0.09186, 0.09321, 23495532.3],
                                       [1561618800000, 0.09336, 0.09399, 0.09218, 0.09311, 8711535.7],
                                       [1561622400000, 0.09309, 0.09311, 0.0895, 0.0897, 24232737.4],
                                       [1561626000000, 0.08974, 0.09124, 0.08732, 0.09065, 28534383.3],
                                       [1561629600000, 0.09068, 0.09179, 0.0898, 0.0909, 14375679.8],
                                       [1561633200000, 0.09082, 0.09211, 0.09077, 0.09119, 7539878.7]]}}

p_d_4_base_asset = 'ADA'


class TestPortfolioOpt(unittest.TestCase):

    def setUp(self):
        self.po = PortfolioOpt()


class Test_make_weight_bounds(TestPortfolioOpt):
    def test_make_weight_bounds(self):
        self.assertEqual(True, True)


class Test_forward_looking_return(TestPortfolioOpt):
    def test_forward_looking_return(self):
        d_c = self.po.build_pricing_data_from_ohlcv(pricing_data, base_asset, '1h')
        r_b, r_e, e_f = self.po.generate_analysis_model(d_c, weight_bounds, frequency, frequency)
        if target_return is not None:
            _oer = e_f.efficient_return(target_return=target_return)
        if target_risk is not None:
            _omw = e_f.efficient_risk(target_risk=target_risk)
        w_c = e_f.clean_weights()
        a, b, c = self.po.forward_looking_return(d_c, r_b, r_e, w_c)
        self.assertEqual(a, 'Thu Jun  6 14:00:00 2019')
        self.assertEqual(b, 'Thu Jun  6 18:00:00 2019')
        self.assertEqual(c, 0.01827667022913032)

    def test_forward_looking_return_pd3(self):
        d_c = self.po.build_pricing_data_from_ohlcv(pricing_data_3, 'USDT', '1h')
        r_b, r_e, e_f = self.po.generate_analysis_model(d_c, weight_bounds, 20, 20)
        _oer = e_f.efficient_return(target_return=0.5)
        w_c = e_f.clean_weights()
        a, b, c = self.po.forward_looking_return(d_c, r_b, r_e, w_c)
        self.assertEqual(a, 'Wed Jun 19 23:00:00 2019')
        self.assertEqual(b, 'Thu Jun 20 18:00:00 2019')
        self.assertEqual(c, 0.01929084626691416)


class Test_generate_analysis_model(TestPortfolioOpt):
    def test_generate_analysis_model(self):
        dc = self.po.build_pricing_data_from_ohlcv(pricing_data, base_asset, '1h')
        model = self.po.generate_analysis_model(dc, weight_bounds, frequency, frequency)
        self.assertIsInstance(model, tuple)


class Test_usdt_generate_report(TestPortfolioOpt):
    def test_usdt_generate_report(self):
        a, b = self.po.generate_report(pricing_data, ['1h', ], weight_bounds,
                                       base_asset, 5, 5, target_risk)
        self.assertDictEqual(a, {'BTC': 0.05, 'ETH': 0.05, 'USDT': 0.05, 'XRP': 0.05, 'PAX': 0.05,
                                 'TUSD': 0.05, 'USDC': 0.05, 'USDS': 0.05, 'BNB': 0.6})
        self.assertEqual(len(b), 6)


class Test_build_pricing_data_from_ohlcv(TestPortfolioOpt):
    def test_build_pricing_data_from_ohlcv_bnb_columns(self):
        dc = self.po.build_pricing_data_from_ohlcv(pricing_data, 'BNB', '1h')
        # Check for column names
        self.assertListEqual(list(dc.columns.values),
                             ['BTC', 'ETH', 'USDT', 'XRP', 'PAX', 'TUSD', 'USDC', 'USDS', 'BNB'])
        # Check for unique column names
        self.assertEqual(len(list(dc.columns.values)), len(set(dc.columns.values)))

    def test_build_pricing_data_from_ohlcv_bnb(self):
        dc = self.po.build_pricing_data_from_ohlcv(pricing_data, 'BNB', '1h')
        self.assertEqual(len(dc), 5)
        self.assertEqual(len(dc.columns), 9)

    def test_build_pricing_data_from_ohlcv_usdt(self):
        dc = self.po.build_pricing_data_from_ohlcv(pricing_data_2, 'USDT', '1h')
        # Check for unique column names
        self.assertEqual(len(list(dc.columns.values)), len(set(dc.columns.values)))
        self.assertEqual(len(dc), 3)
        self.assertEqual(len(dc.columns), 4)

    def test_build_pricing_data_from_ohlcv_ada_2_leg_markets(self):
        dc = self.po.build_pricing_data_from_ohlcv(pricing_data_4, p_d_4_base_asset, '1h')
        ldc = list(dc.keys())
        self.assertListEqual(ldc, ['BTC', 'FUEL', 'BNB', 'ETH', 'USDT', 'ADA'])
        self.assertEqual(dc['FUEL'].sum(), 1.6354390476318676)
        self.assertEqual(dc['BTC'].sum(), 2653103.4471830414)
        self.assertEqual(dc['ADA'].sum(), 20)


if __name__ == '__main__':
    unittest.main()
